<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mq on 松溪夜谈</title><link>https://zhwjimmy.github.io/tags/mq/</link><description>Recent content in mq on 松溪夜谈</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 03 Feb 2023 16:46:01 +0800</lastBuildDate><atom:link href="https://zhwjimmy.github.io/tags/mq/index.xml" rel="self" type="application/rss+xml"/><item><title>消息队列</title><link>https://zhwjimmy.github.io/post/component/mq/</link><pubDate>Fri, 03 Feb 2023 16:46:01 +0800</pubDate><guid>https://zhwjimmy.github.io/post/component/mq/</guid><description>消息队列 消息队列的作用 应用解耦 削峰填谷 异步处理 消息模型 队列模型 队列：先进先出 弊端：一个消息只能被其中一个消费者消费 发布-订阅模型 包含模块 发布者 订阅者（通过消费者组实现） 主题/Topic queue队列（rocketmq）/分区partition（kafka） 消费位置 消费者组 队列的作用 为了保证消息的有序性，在一条消息被成功消费之前，下一条消息不能被消费。也就是说，每个主题在任意时刻，至多只能有一个消费者实例在进行消费。为了解决这个问题，提升消费性能，引入队列的概念。 每个主题包含多个队列，通过多个队列来实现多实例并行生产和消费。 只在队列上保证消息的有序性，主题层面不保证 消费者组 解决同一个消息多个业务消费的问题 每个消费组都消费主题中一份完整的消息，不同消费组间消费进度不受影响 消费组中包含多个消费者，同一个组内的消费者是竞争消费的关系，每个消费者负责消费组内的一部分消息。 消费位置 由于消息需要被不同的消费组进行多次消费，所以消费完的消息并不会立即删除，所以消息队列为每个消费组在每个队列上维护了一个消费位置。 消息队列常见场景 如何实现消息有序 如何保证消息不丢失 如何保证消息只消费一次（幂等） 消息积压如何处理 分布式事务 kafka kafka是什么 Kafka 起初是由 Linkedin 公司采用 Scala 语言开发的一个多分区、多副本且基于ZooKeeper协调的分布式消息系统，现己被捐献给 Apache 基金会。目前 Kafka 已经定位为一个分布式流式处理平台，它以高吞吐、可持久化、可水平扩展、支持流数据处理等多种特性而被广泛使用。</description></item></channel></rss>